#include <iostream>
#include <fstream>
#include <string>
#include <list>
#include <cstdio>
#include <cassert>
#include <algorithm>


// «адача 5
/*
»сходный файл, из которого считываютс€ данные, содержит два набора положительных значений, между наборами стоит отрицательное значение.
ѕостроить два списка —1 и —2, элементы которых содержат значение из наборов 1 и 2 соответственно (в том пор€дке, как они заданы в файле).
    создать два списка, записывать в первый числа до отрицательного значени€, во второй - после отрицательного и до конца файла
¬ыполнить соединение списков —1 и —2 в третий список —3, упор€дочив элементы по возрастанию значений.
    объединить два массива в один, затем запустить сортировку дл€ —3
¬ывести на экран списки —1, —2, —3.
*/
/*
¬ файле идут значени€ в строке, в качестве разделител€ используетс€ отрицательное число.
„исла до отр. числа Ц список —1, числа после отр. числа Ц список —2.
—обрать два списка в один, отсортировать с помощью сортировки сли€нием
¬ывести списки —1, —2 и отсортированный —3.
*/

int main()
{
    std::ifstream fin;
    fin.open("C:\\Code\\summer_practice.txt");
    char ch{0};
    std::string tmp;
    int read_number;
    bool separator_flag = 0;
    std::list<int> left_half;
    std::list<int> right_half;
    while (fin >> read_number)
    {
        if (read_number < 0)
        {
            separator_flag = 1;
            continue;
        }
        if (separator_flag == 0)
            left_half.push_back(read_number);
        if (separator_flag == 1)
            right_half.push_back(read_number);
            
        //если получили не пробел, то записываем в строку. —троку конвертируем в инт и сравниваем число на отрицательность.
        // пишем числа в один список, пока не дойдем до отрицательного числа. —тавим флаг разделител€ и начинаем писать во второй список
    }
    FILE* ptrFile;
    assert(fopen_s(&ptrFile, "C:\\Code\\summer_practice.txt", "r") == 0 && "File has failed to open!");
    if (fin.is_open())
    {
            // из строки брать значение(до пробела): пока не встретим пробел, считаем последовательность как одно число
            // , переводить его в int,
            // провер€ть на отрицательность - если положительное, пишем в список и продвигаемс€ дальше,
            // если нет - заканчиваем заполн€ть первый список и заполн€ем второй значени€ми после отр. числа и до конца строки
    fin.close();     // закрываем файл
    }
}